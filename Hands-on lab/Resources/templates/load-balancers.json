{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"WebLBDnsLabelPrefix": {
			"type": "string",
			"defaultValue": "ci-",
			"minLength": 1
		},
		"Environment": {
			"type": "string",
			"metadata": {
				"description": "Name of environment (e.g. 'Primary' or 'Secondary')"
			},
			"minLength": 1
		},
		"DataSubnetId": {
			"type": "string",
			"metadata": {
				"description": "Subnet Id of the data tier"
			}
		},
		"SQLLBPrivateIPAddress": {
			"type": "string",
			"metadata": {
				"description": "Private IP address for SQL load-balancer frontend"
			}
		}
	},
	"variables": {
		"InternalLoadBalancerName": "[concat(parameters('Environment'),'InternalLB2SQL')]",
		"ExternalLoadBalancerName": "[concat(parameters('Environment'),'ExternalLB2IIS')]",
		"FrontEnd-IIS": "FrontEnd-IIS",
		"FrontEnd-SQL": "FrontEnd-SQL",
		"Rule80": "80",
		"Rule1433": "1433",
		"BackEndPoolIIS": "BackEndPool-IIS",
		"BackEndPoolSQL": "BackEndPool-SQL",
		"Probe80": "80",
		"Probe59999": "59999",
		"ExternalLoadBalancerPublicIPName": "[concat(variables('ExternalLoadBalancerName'), '-PIP')]",
		"ExternalLoadBalancerPublicIPDNSName": "[concat(parameters('WebLBDnsLabelPrefix'), take(uniqueString(resourceGroup().id), 2))]"
	},
	"resources": [
		{
			"apiVersion": "2017-10-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('ExternalLoadBalancerPublicIPName')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[variables('ExternalLoadBalancerPublicIPDNSName')]"
				}
			}
		},
		{
			"apiVersion": "2018-12-01",
			"name": "[variables('ExternalLoadBalancerName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "External Load Balancer"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('ExternalLoadBalancerPublicIPName'))]"
			],
			"sku": {
				"name": "Standard",
				"tier": "Regional"
			},
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('FrontEnd-IIS')]",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ExternalLoadBalancerPublicIPName'))]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('BackEndPoolIIS')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('Rule80')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('ExternalLoadBalancerName'), variables('FrontEnd-IIS'))]"
							},
							"backendAddressPool": {
								"id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ExternalLoadBalancerName'), variables('BackEndPoolIIS'))]"
							},
							"probe": {
								"id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ExternalLoadBalancerName'), variables('Probe80'))]"
							},
							"protocol": "Tcp",
							"frontendPort": 80,
							"backendPort": 80,
							"enableFloatingIP": false,
							"idleTimeoutInMinutes": 5
						}
					}
				],
				"probes": [
					{
						"name": "[variables('Probe80')]",
						"properties": {
							"protocol": "Tcp",
							"port": 80,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				]
			}
		},
		{
			"apiVersion": "2018-12-01",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('InternalLoadBalancerName')]",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "SQL AOG LoadBalancer"
			},
			"sku": {
				"name": "Standard",
				"tier": "Regional"
			},
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('FrontEnd-SQL')]",
						"properties": {
							"subnet": {
								"id": "[parameters('DataSubnetId')]"
							},
							"privateIPAddress": "[parameters('SQLLBPrivateIPAddress')]",
							"privateIPAllocationMethod": "Static"
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('BackEndPoolSQL')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('Rule1433')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('InternalLoadBalancerName'), variables('FrontEnd-SQL'))]"
							},
							"backendAddressPool": {
								"id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('InternalLoadBalancerName'), variables('BackEndPoolSQL'))]"
							},
							"probe": {
								"id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('InternalLoadBalancerName'), variables('Probe59999'))]"
							},
							"protocol": "Tcp",
							"frontendPort": 1433,
							"backendPort": 1433,
							"idleTimeoutInMinutes": 4,
							"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('Probe59999')]",
						"properties": {
							"protocol": "Tcp",
							"port": 59999,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				]
			}
		}   
	],
	"outputs": {}
}